openapi: 3.0.0
info:
  version: 1.0.0
  title: Health Tracker API
  description: This API provides endpoints for handling CRUD operations on the Health Tracker data.
  contact:
    name: Thelma Nwanesindu
    email: 20109631@mail.wit.ie
paths:
  /api/users:
    get:
      summary: Retrieve all users
      responses:
        200:
          description: A list of users in the app
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Add a new user
      requestBody:
        description: The user data to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: The user has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/users/{user-id}:
    get:
      summary: Retrieve a user by ID
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: The user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
    delete:
      summary: Delete a user by ID
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: The deleted user's data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
    patch:
      summary: Update a user by ID
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      requestBody:
        description: The updated user data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: The updated user's data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found

  /api/users/email/{user-email}:
    get:
      summary: Retrieve a user by email
      parameters:
        - in: path
          name: user-email
          description: User email path parameter
          required: true
          schema:
            type: string
            example: joe@soap.com
      responses:
        200:
          description: The user data for the provided email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found

  /api/activities:
    get:
      summary: Retrieve all activities
      responses:
        200:
          description: A list of activities in the app
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activities'
    post:
      summary: Add a new activity
      requestBody:
        description: The activity data to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activities'
      responses:
        200:
          description: The activity has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activities'

  /api/users/{user-id}/activities:
    get:
      summary: Retrieve activities for a user
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: A list of activities for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activities'
    delete:
      summary: Delete activities for a user
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: The activities have been deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activities'

  /api/activities/{activity-id}:
    get:
      summary: Retrieve a specific activity by ID
      parameters:
        - $ref: '#/components/parameters/ActivityIdPath'
      responses:
        200:
          description: The activity data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activities'
    delete:
      summary: Delete a specific activity by ID
      parameters:
        - $ref: '#/components/parameters/ActivityIdPath'
      responses:
        200:
          description: The activity has been deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activities'
    patch:
      summary: Update a specific activity by ID
      parameters:
        - $ref: '#/components/parameters/ActivityIdPath'
      requestBody:
        description: The updated activity data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activities'
      responses:
        200:
          description: The updated activity data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activities'
  /api/histories:
    get:
      summary: Retrieve all health histories
      responses:
        200:
          description: A list of health histories in the app
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthHistory'
    post:
        summary: Add a new health history
        requestBody:
          description: The health history data to add
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthHistory'
        responses:
          200:
            description: The health history has been created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HealthHistory'
  /api/users/{user-id}/histories:
    get:
        summary: Retrieve health histories for a user
        parameters:
            - $ref: '#/components/parameters/UserIdPath'
        responses:
            200:
              description: A list of health histories for the user
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/HealthHistory'
    delete:
        summary: Delete health histories for a user
        parameters:
            - $ref: '#/components/parameters/UserIdPath'
        responses:
            200:
              description: The health histories have been deleted
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/HealthHistory'
  /api/histories/{history-id}:
        get:
          summary: Retrieve a specific health history by ID
          parameters:
            - $ref: '#/components/parameters/HistoryIdPath'
          responses:
            200:
              description: The health history data
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/HealthHistory'
        delete:
          summary: Delete a specific health history by ID
          parameters:
            - $ref: '#/components/parameters/HistoryIdPath'
          responses:
            200:
              description: The health history has been deleted
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/HealthHistory'
        patch:
          summary: Update a specific health history by ID
          parameters:
            - $ref: '#/components/parameters/HistoryIdPath'
          requestBody:
            description: The updated health history data
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HealthHistory'
          responses:
            200:
              description: The updated health history data
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/HealthHistory'

  /api/medication:
        get:
          summary: Retrieve all medication logs
          responses:
            200:
              description: A list of medication logs in the app
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/MedicationLog'
        post:
          summary: Add a new medication log
          requestBody:
            description: The medication log data to add
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MedicationLog'
          responses:
            200:
              description: The medication log has been created
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/MedicationLog'
  /api/users/{user-id}/medication:
        get:
          summary: Retrieve medication logs for a user
          parameters:
            - $ref: '#/components/parameters/UserIdPath'
          responses:
            200:
              description: A list of medication logs for the user
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/MedicationLog'
        delete:
          summary: Delete medication logs for a user
          parameters:
            - $ref: '#/components/parameters/UserIdPath'
          responses:
            200:
              description: The medication logs have been deleted
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/MedicationLog'
  /api/medication/{medication-id}:
        get:
          summary: Retrieve a specific medication log by ID
          parameters:
            - $ref: '#/components/parameters/MedicationIdPath'
          responses:
            200:
              description: The medication log data
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/MedicationLog'
        delete:
          summary: Delete a specific medication log by ID
          parameters:
            - $ref: '#/components/parameters/MedicationIdPath'
          responses:
            200:
              description: The medication log has been deleted
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/MedicationLog'
        patch:
          summary: Update a specific medication log by ID
          parameters:
            - $ref: '#/components/parameters/MedicationIdPath'
          requestBody:
            description: The updated medication log data
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MedicationLog'
          responses:
            200:
              description: The updated medication log data
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/MedicationLog'
  /api/sleep-records:
        get:
          summary: Retrieve all sleep records
          responses:
            200:
              description: A list of sleep records in the app
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/SleepRecord'
  /api/sleep-records/{sleep-id}:
        get:
          summary: Retrieve a sleep record by ID
          parameters:
            - $ref: '#/components/parameters/SleepIdPath'
          responses:
            200:
              description: The sleep record data
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/SleepRecord'
  /api/sleep-records/{user-id}:
        get:
          summary: Retrieve sleep records for a user
          parameters:
            - $ref: '#/components/parameters/UserIdPath'
          responses:
            200:
              description: A list of sleep records for the user
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/SleepRecord'

components:
  parameters:
    UserIdPath:
      in: path
      name: user-id
      description: User id path parameter
      required: true
      schema:
        type: integer
        example: 3232
    ActivityIdPath:
      in: path
      name: activity-id
      description: Activity id path parameter
      required: true
      schema:
        type: integer
        example: 101
    MedicationIdPath:
      in: path
      name: medication-id
      description: Medication Log ID path parameter
      required: true
      schema:
        type: integer
        example: 5678
    HistoryIdPath:
        in: path
        name: history-id
        description: Health History ID path parameter
        required: true
        schema:
          type: integer
          example: 91011
    SleepIdPath:
        in: path
        name: sleep-id
        description: Sleep Record ID path parameter
        required: true
        schema:
          type: integer
          example: 1213

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 3232
        name:
          type: string
          example: Joe Soap
        email:
          type: string
          example: joe@soap.com

    Email:
      type: object
      properties:
        id:
          type: integer
          example: 3232
        email:
          type: string
          example: thelma@gmail.com

    Activities:
      type: object
      properties:
        id:
          type: integer
          example: 3232
        activity:
          type: string
          example: Walking
    MedicationLog:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the medication log
          example: 5678
        userId:
          type: integer
          description: ID of the user associated with the medication log
          example: 1234
        medicationName:
          type: string
          description: Name of the medication
          example: Ibuprofen
        dosage:
          type: string
          description: Dosage of the medication
          example: "200mg"
        frequency:
          type: string
          description: Frequency of the medication intake
          example: "Twice a day"
        startDate:
          type: string
          format: date
          description: Start date of the medication
          example: "2024-01-01"
        endDate:
          type: string
          format: date
          description: End date of the medication
          example: "2024-01-10"
        notes:
          type: string
          description: Additional notes about the medication
          example: "Take with food"

    HealthHistory:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the health history record
          example: 91011
        userId:
          type: integer
          description: ID of the user associated with the health history
          example: 1234
        conditionName:
          type: string
          description: Name of the health condition
          example: Hypertension
        diagnosisDate:
          type: string
          format: date
          description: Date of diagnosis
          example: "2020-05-15"
        status:
          type: string
          description: Current status of the condition (e.g., active, resolved)
          example: Active
        notes:
          type: string
          description: Additional notes about the health history
          example: "Under medication and regular monitoring"

    SleepRecord:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the sleep record
          example: 1213
        userId:
          type: integer
          description: ID of the user associated with the sleep record
          example: 1234
        date:
          type: string
          format: date
          description: The date of the sleep record
          example: "2024-02-01"
        hoursSlept:
          type: number
          format: float
          description: Total hours slept
          example: 7.5
        quality:
          type: string
          description: Quality of sleep (e.g., good, average, poor)
          example: Good
        notes:
          type: string
          description: Additional notes about the sleep record
          example: "Woke up feeling refreshed"
